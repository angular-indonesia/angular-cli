name: CI

on:
  push:
    branches:
      - main
      - '[0-9]+.[0-9]+.x'
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Initialize environment
        uses: angular/dev-infra/github-actions/npm/checkout-and-setup-node@ef022a04090aca0945862f9f69f8ff3ea5865f26
      - name: Setup ESLint Caching
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: .eslintcache
          key: ${{ runner.os }}-${{ hashFiles('.eslintrc.json') }}
      - name: Install node modules
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Run ESLint
        run: yarn lint --cache-strategy content
      - name: Validate NgBot Configuration
        run: yarn ng-dev ngbot verify
      - name: Validate Circular Dependencies
        run: yarn ts-circular-deps:check
      - name: Run Validation
        run: yarn -s admin validate
      - name: Check tooling setup
        run: yarn -s check-tooling-setup
      - name: Check commit message
        # Commit message validation is only done on pull requests as its too late to validate once
        # it has been merged.
        if: github.event_name == 'pull_request'
        run: yarn ng-dev commit-message validate-range ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}
      - name: Check code format
        # Code formatting checks are only done on pull requests as its too late to validate once
        # it has been merged.
        if: github.event_name == 'pull_request'
        run: yarn ng-dev format changed --check ${{ github.event.pull_request.base.sha }}
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Initialize environment
        uses: angular/dev-infra/github-actions/npm/checkout-and-setup-node@0109d498b0f6aae418ed4924a5e5c65695f0ac61
      - name: Setup Bazel
        uses: angular/dev-infra/github-actions/bazel/setup@0109d498b0f6aae418ed4924a5e5c65695f0ac61
      - name: Setup Bazel RBE
        uses: angular/dev-infra/github-actions/bazel/configure-remote@0109d498b0f6aae418ed4924a5e5c65695f0ac61
      - name: Install node modules
        run: yarn install --frozen-lockfile
      - name: Build all buildable targets
        run: yarn bazel build //...

  test:
    runs-on: ubuntu-latest
    env:
      defaultVersion: 16
    strategy:
      matrix:
        version: [16, 18]
    steps:
      - name: Initialize environment
        uses: angular/dev-infra/github-actions/npm/checkout-and-setup-node@0109d498b0f6aae418ed4924a5e5c65695f0ac61
        with:
          node-version: ${{ matrix.version }}
      - name: Setup Bazel
        uses: angular/dev-infra/github-actions/bazel/setup@0109d498b0f6aae418ed4924a5e5c65695f0ac61
      - name: Setup Bazel RBE
        uses: angular/dev-infra/github-actions/bazel/configure-remote@0109d498b0f6aae418ed4924a5e5c65695f0ac61
      - name: Install node modules
        run: yarn install --frozen-lockfile
      - if: matrix.version == env.defaultVersion
        name: Run tests for default node version
        run: yarn bazel test --test_tag_filters=-node18,-node16-broken //packages/...
      - if: matrix.version != env.defaultVersion
        name: Run tests for non-default node version
        run: yarn bazel test --test_tag_filters=node18,-node18-broken //packages/...
